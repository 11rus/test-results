{
  "ua": [
    "CH69",
    "CH71",
    "ED42",
    "FF64",
    "SF11",
    "SI72",
    "SI74"
  ],
  "results": {
    "/payment-request/PaymentItem/type_member.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Smoke test": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "An invalid enum value for PaymentDetailsInit.total's type throws TypeError": {
          "stNum": 1,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "CH71": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "ED42": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "SF11": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "SI72": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "SI74": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw"
          },
          "totals": {
            "FAIL": 6,
            "PASS": 1
          }
        },
        "Invalid enum value for PaymentItem.type member throws a TypeError": {
          "stNum": 2,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "CH71": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "ED42": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "SF11": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "SI72": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw",
            "SI74": "assert_throws: function \"() => {\n    new PaymentRequest(validMethods, invalidDetails);\n  }\" did not throw"
          },
          "totals": {
            "FAIL": 6,
            "PASS": 1
          }
        },
        "Valid enum values for PaymentItem.type member does not throw": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/PaymentMethodChangeEvent/methodDetails-attribute.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Must have a methodDetails IDL attribute, which is initialized with to the methodName dictionary value": {
          "stNum": 0,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "PaymentMethodChangeEvent is not defined",
            "CH71": "PaymentMethodChangeEvent is not defined",
            "ED42": "'PaymentMethodChangeEvent' is not defined",
            "SF11": "Can't find variable: PaymentMethodChangeEvent",
            "SI72": "PaymentMethodChangeEvent is not defined",
            "SI74": "PaymentMethodChangeEvent is not defined"
          },
          "totals": {
            "FAIL": 6,
            "PASS": 1
          }
        },
        "The methodDetails member defaults to null": {
          "stNum": 1,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "PaymentMethodChangeEvent is not defined",
            "FF64": "Missing required 'methodName' member of PaymentMethodChangeEventInit."
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/payment-request/PaymentMethodChangeEvent/methodName-attribute.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Must have a methodName IDL attribute, which is initialized with to the methodName dictionary value": {
          "stNum": 0,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "PaymentMethodChangeEvent is not defined",
            "CH71": "PaymentMethodChangeEvent is not defined",
            "ED42": "'PaymentMethodChangeEvent' is not defined",
            "SF11": "Can't find variable: PaymentMethodChangeEvent",
            "SI72": "PaymentMethodChangeEvent is not defined",
            "SI74": "PaymentMethodChangeEvent is not defined"
          },
          "totals": {
            "FAIL": 6,
            "PASS": 1
          }
        },
        "When no dictionary is passed, the methodName member defaults to the empty string": {
          "stNum": 1,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "PaymentMethodChangeEvent is not defined",
            "FF64": "Missing required 'methodName' member of PaymentMethodChangeEventInit."
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/payment-request/PaymentRequestUpdateEvent/constructor.http.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequestUpdateEvent constructor must not be exposed in insecure context": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/PaymentRequestUpdateEvent/constructor.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequestUpdateEvent can be constructed in secure-context": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequestUpdateEvent can be constructed with an EventInitDict, even if not trusted": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_true: set by EventInitDict expected true got undefined",
            "SI72": "assert_false: constructed in script, so not be trusted expected false got undefined",
            "SI74": "assert_false: constructed in script, so not be trusted expected false got undefined"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "PaymentRequestUpdateEvent can be dispatched, even if not trusted": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/PaymentRequestUpdateEvent/updatewith-method.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Let target be the request which is dispatching the event.": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Calling .updateWith() with an undispatched untrusted event throws \"InvalidStateError\"": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "assert_throws: untrusted event of type \"just a test\" must throw \"InvalidStateError\" function \"() => {\n        ev.updateWith(Promise.resolve());\n      }\" did not throw",
            "SI74": "assert_throws: untrusted event of type \"just a test\" must throw \"InvalidStateError\" function \"() => {\n        ev.updateWith(Promise.resolve());\n      }\" did not throw"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "Calling .updateWith() with a dispatched, untrusted event, throws \"InvalidStateError\"": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "assert_throws: untrusted event of type \"just a test\" must throw \"InvalidStateError\" function \"() => {\n        ev.updateWith(Promise.resolve())\n      }\" did not throw",
            "SI74": "assert_throws: untrusted event of type \"just a test\" must throw \"InvalidStateError\" function \"() => {\n        ev.updateWith(Promise.resolve())\n      }\" did not throw"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/active-document-cross-origin.https.sub.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequest <iframe allowpaymentrequest> in non-active document (cross-origin)": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "assert_throws: function \"() => {\n        new grabbedPaymentRequest(...paymentArgs);\n      }\" threw object \"Error: Can't execute code from a freed script\" (\"Error\") expected object \"[object Object]\" (\"SecurityError\")"
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/active-document-same-origin.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequest <iframe allowpaymentrequest> in non-active document (same-origin)": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "assert_throws: function \"() => {\n        new grabbedPaymentRequest(...paymentArgs);\n      }\" threw object \"Error: Can't execute code from a freed script\" (\"Error\") expected object \"[object Object]\" (\"SecurityError\")"
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/allowpaymentrequest-attribute-cross-origin-bc-containers.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "TIMEOUT",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 6,
        "TIMEOUT": 1
      },
      "subtests": {
        "iframe": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "FAIL",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "SF11": "assert_equals: expected \"Success\" but got \"Exception\""
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        },
        "frame": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "object": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "TIMEOUT",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "Unable to get property 'postMessage' of undefined or null reference",
            "FF64": "Test timed out"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 1,
            "TIMEOUT": 1
          }
        },
        "embed": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "FAIL",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "Unable to get property 'postMessage' of undefined or null reference",
            "FF64": "window[i] is undefined, can't access property \"postMessage\" of it"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/allowpaymentrequest-attribute-same-origin-bc-containers.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "iframe": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "frame": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "assert_equals: expected \"Success\" but got \"Exception\"",
            "SI74": "assert_equals: expected \"Success\" but got \"Exception\""
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "object": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "Unable to get property 'postMessage' of undefined or null reference",
            "SI72": "assert_equals: expected \"Success\" but got \"Exception\"",
            "SI74": "assert_equals: expected \"Success\" but got \"Exception\""
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "embed": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "Unable to get property 'postMessage' of undefined or null reference",
            "SI72": "assert_equals: expected \"Success\" but got \"Exception\"",
            "SI74": "assert_equals: expected \"Success\" but got \"Exception\""
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/basic.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequest <iframe allowpaymentrequest> basic": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "FAIL",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "SF11": "Trying to start an Apple Pay session from an insecure document."
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/no-attribute-cross-origin-bc-containers.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "iframe": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "frame": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "object": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "Unable to get property 'postMessage' of undefined or null reference"
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        },
        "embed": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "Unable to get property 'postMessage' of undefined or null reference"
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/no-attribute-same-origin-bc-containers.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "iframe": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "assert_equals: expected \"Success\" but got \"Exception\"",
            "SI74": "assert_equals: expected \"Success\" but got \"Exception\""
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "frame": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "assert_equals: expected \"Success\" but got \"Exception\"",
            "SI74": "assert_equals: expected \"Success\" but got \"Exception\""
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "object": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "Unable to get property 'postMessage' of undefined or null reference",
            "SI72": "assert_equals: expected \"Success\" but got \"Exception\"",
            "SI74": "assert_equals: expected \"Success\" but got \"Exception\""
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "embed": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "Unable to get property 'postMessage' of undefined or null reference",
            "SI72": "assert_equals: expected \"Success\" but got \"Exception\"",
            "SI74": "assert_equals: expected \"Success\" but got \"Exception\""
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/removing-allowpaymentrequest.https.sub.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequest removing allowpaymentrequest after load and then navigating": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "FAIL",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_array_equals: after navigation lengths differ, expected 3 got 4",
            "ED42": "assert_equals: before navigation expected \"Success\" but got \"Exception\"",
            "FF64": "assert_array_equals: after navigation lengths differ, expected 3 got 4",
            "SF11": "assert_equals: before navigation expected \"Success\" but got \"Exception\"",
            "SI72": "assert_equals: before navigation expected \"Success\" but got \"Exception\"",
            "SI74": "assert_equals: before navigation expected \"Success\" but got \"Exception\""
          },
          "totals": {
            "PASS": 1,
            "FAIL": 6
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/setting-allowpaymentrequest-timing.https.sub.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequest setting allowpaymentrequest after document creation, before response": {
          "stNum": 0,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "FAIL",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "assert_equals: expected \"Exception\" but got \"Success\"",
            "CH71": "assert_equals: expected \"Exception\" but got \"Success\"",
            "ED42": "assert_equals: expected \"Exception\" but got \"Success\"",
            "FF64": "assert_equals: expected \"Exception\" but got \"Success\"",
            "SI72": "assert_equals: expected \"Exception\" but got \"Success\"",
            "SI74": "assert_equals: expected \"Exception\" but got \"Success\""
          },
          "totals": {
            "FAIL": 6,
            "PASS": 1
          }
        }
      }
    },
    "/payment-request/allowpaymentrequest/setting-allowpaymentrequest.https.sub.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequest setting allowpaymentrequest after load and then navigating": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "FAIL",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_array_equals: before navigation lengths differ, expected 3 got 4",
            "ED42": "assert_equals: before navigation expected \"Exception\" but got \"Success\"",
            "FF64": "assert_array_equals: before navigation lengths differ, expected 3 got 4",
            "SF11": "assert_equals: after navigation expected \"Success\" but got \"Exception\"",
            "SI72": "assert_equals: before navigation expected \"Exception\" but got \"Success\"",
            "SI74": "assert_equals: before navigation expected \"Exception\" but got \"Success\""
          },
          "totals": {
            "PASS": 1,
            "FAIL": 6
          }
        }
      }
    },
    "/payment-request/historical.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "ERROR",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {
        "ED42": "[object Object]"
      },
      "totals": {
        "OK": 6,
        "ERROR": 1
      },
      "subtests": {
        "paymentRequestID in PaymentRequest": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "paymentRequestID in PaymentResponse": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "careOf in PaymentAddress": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "totalAmount in PaymentResponse": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "paymentRequestId in PaymentRequest": {
          "stNum": 4,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "paymentRequestId in PaymentResponse": {
          "stNum": 5,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "supportedMethods must not support sequence<DOMString>": {
          "stNum": 6,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: function \"() => {\n    new PaymentRequest([{supportedMethods: methods}], {total: {label: 'bar', amount: {currency: 'BAZ', value: '0'}}});\n  }\" threw object \"Error: Could not complete the operation due to error 80020101.\" (\"Error\") expected object \"[object Object]\" (\"toString should be called\")",
            "SI72": "assert_throws: function \"() => {\n    new PaymentRequest([{supportedMethods: methods}], {total: {label: 'bar', amount: {currency: 'BAZ', value: '0'}}});\n  }\" threw object \"[object Object]\" (\"sequence<DOMString> conversion is not allowed\") expected object \"[object Object]\" (\"toString should be called\")",
            "SI74": "assert_throws: function \"() => {\n    new PaymentRequest([{supportedMethods: methods}], {total: {label: 'bar', amount: {currency: 'BAZ', value: '0'}}});\n  }\" threw object \"[object Object]\" (\"sequence<DOMString> conversion is not allowed\") expected object \"[object Object]\" (\"toString should be called\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        }
      }
    },
    "/payment-request/idlharness.https.window.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Setup for Payment Request API IDL tests.": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest interface: existence and properties of interface object": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "assert_equals: prototype of PaymentRequest is not EventTarget expected function \"function EventTarget() { [native code] }\" but got function \"function() {\n    [native code]\n}\""
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        },
        "PaymentRequest interface object length": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface object name": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: existence and properties of interface prototype object": {
          "stNum": 4,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: existence and properties of interface prototype object's \"constructor\" property": {
          "stNum": 5,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: existence and properties of interface prototype object's @@unscopables property": {
          "stNum": 6,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: operation show([object Object])": {
          "stNum": 7,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for show([object Object]) on PaymentRequest": {
          "stNum": 8,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest interface: operation abort()": {
          "stNum": 9,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for abort() on PaymentRequest": {
          "stNum": 10,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest interface: operation canMakePayment()": {
          "stNum": 11,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for canMakePayment() on PaymentRequest": {
          "stNum": 12,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest interface: attribute id": {
          "stNum": 13,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for id property on PaymentRequest": {
          "stNum": 14,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest interface: attribute shippingAddress": {
          "stNum": 15,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for shippingAddress property on PaymentRequest": {
          "stNum": 16,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest interface: attribute shippingOption": {
          "stNum": 17,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for shippingOption property on PaymentRequest": {
          "stNum": 18,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest interface: attribute shippingType": {
          "stNum": 19,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for shippingType property on PaymentRequest": {
          "stNum": 20,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest interface: attribute onshippingaddresschange": {
          "stNum": 21,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for onshippingaddresschange property on PaymentRequest": {
          "stNum": 22,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest interface: attribute onshippingoptionchange": {
          "stNum": 23,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for onshippingoptionchange property on PaymentRequest": {
          "stNum": 24,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequest must be primary interface of paymentRequest": {
          "stNum": 25,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Stringification of paymentRequest": {
          "stNum": 26,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"show([object Object])\" with the proper type": {
          "stNum": 27,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: calling show([object Object]) on paymentRequest with too few arguments must throw TypeError": {
          "stNum": 28,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"abort()\" with the proper type": {
          "stNum": 29,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"canMakePayment()\" with the proper type": {
          "stNum": 30,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"id\" with the proper type": {
          "stNum": 31,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"shippingAddress\" with the proper type": {
          "stNum": 32,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"shippingOption\" with the proper type": {
          "stNum": 33,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"shippingType\" with the proper type": {
          "stNum": 34,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"onshippingaddresschange\" with the proper type": {
          "stNum": 35,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"onshippingoptionchange\" with the proper type": {
          "stNum": 36,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentAddress interface: existence and properties of interface object": {
          "stNum": 37,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentAddress interface object length": {
          "stNum": 38,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentAddress interface object name": {
          "stNum": 39,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentAddress interface: existence and properties of interface prototype object": {
          "stNum": 40,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentAddress interface: existence and properties of interface prototype object's \"constructor\" property": {
          "stNum": 41,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentAddress interface: existence and properties of interface prototype object's @@unscopables property": {
          "stNum": 42,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentAddress interface: operation toJSON()": {
          "stNum": 43,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for toJSON() on PaymentAddress": {
          "stNum": 44,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute city": {
          "stNum": 45,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for city property on PaymentAddress": {
          "stNum": 46,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute country": {
          "stNum": 47,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for country property on PaymentAddress": {
          "stNum": 48,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute dependentLocality": {
          "stNum": 49,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for dependentLocality property on PaymentAddress": {
          "stNum": 50,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute languageCode": {
          "stNum": 51,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for languageCode property on PaymentAddress": {
          "stNum": 52,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute organization": {
          "stNum": 53,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for organization property on PaymentAddress": {
          "stNum": 54,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute phone": {
          "stNum": 55,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for phone property on PaymentAddress": {
          "stNum": 56,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute postalCode": {
          "stNum": 57,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for postalCode property on PaymentAddress": {
          "stNum": 58,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute recipient": {
          "stNum": 59,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for recipient property on PaymentAddress": {
          "stNum": 60,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute region": {
          "stNum": 61,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for region property on PaymentAddress": {
          "stNum": 62,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute regionCode": {
          "stNum": 63,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "FAIL",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "assert_true: The prototype object must have a property \"regionCode\" expected true got false",
            "CH71": "assert_true: The prototype object must have a property \"regionCode\" expected true got false",
            "ED42": "assert_true: The prototype object must have a property \"regionCode\" expected true got false",
            "FF64": "assert_true: The prototype object must have a property \"regionCode\" expected true got false",
            "SF11": "assert_true: The prototype object must have a property \"regionCode\" expected true got false",
            "SI72": "assert_true: The prototype object must have a property \"regionCode\" expected true got false",
            "SI74": "assert_true: The prototype object must have a property \"regionCode\" expected true got false"
          },
          "totals": {
            "FAIL": 7
          }
        },
        "Unscopable handled correctly for regionCode property on PaymentAddress": {
          "stNum": 64,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute sortingCode": {
          "stNum": 65,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for sortingCode property on PaymentAddress": {
          "stNum": 66,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentAddress interface: attribute addressLine": {
          "stNum": 67,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for addressLine property on PaymentAddress": {
          "stNum": 68,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: existence and properties of interface object": {
          "stNum": 69,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "FAIL",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "FF64": "assert_equals: prototype of PaymentResponse is not EventTarget expected function \"function EventTarget() {\n    [native code]\n}\" but got function \"function () {\n}\"",
            "SI72": "assert_equals: prototype of PaymentResponse is not EventTarget expected function \"function EventTarget() { [native code] }\" but got function \"function () { [native code] }\"",
            "SI74": "assert_equals: prototype of PaymentResponse is not EventTarget expected function \"function EventTarget() { [native code] }\" but got function \"function () { [native code] }\""
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "PaymentResponse interface object length": {
          "stNum": 70,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentResponse interface object name": {
          "stNum": 71,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentResponse interface: existence and properties of interface prototype object": {
          "stNum": 72,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "FAIL",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "FF64": "assert_equals: prototype of PaymentResponse.prototype is not EventTarget.prototype expected object \"[object EventTargetPrototype]\" but got object \"[object Object]\"",
            "SI72": "assert_equals: prototype of PaymentResponse.prototype is not EventTarget.prototype expected object \"[object EventTarget]\" but got object \"[object Object]\"",
            "SI74": "assert_equals: prototype of PaymentResponse.prototype is not EventTarget.prototype expected object \"[object EventTarget]\" but got object \"[object Object]\""
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "PaymentResponse interface: existence and properties of interface prototype object's \"constructor\" property": {
          "stNum": 73,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentResponse interface: existence and properties of interface prototype object's @@unscopables property": {
          "stNum": 74,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentResponse interface: operation toJSON()": {
          "stNum": 75,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for toJSON() on PaymentResponse": {
          "stNum": 76,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: attribute requestId": {
          "stNum": 77,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for requestId property on PaymentResponse": {
          "stNum": 78,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: attribute methodName": {
          "stNum": 79,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for methodName property on PaymentResponse": {
          "stNum": 80,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: attribute details": {
          "stNum": 81,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for details property on PaymentResponse": {
          "stNum": 82,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: attribute shippingAddress": {
          "stNum": 83,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for shippingAddress property on PaymentResponse": {
          "stNum": 84,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: attribute shippingOption": {
          "stNum": 85,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for shippingOption property on PaymentResponse": {
          "stNum": 86,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: attribute payerName": {
          "stNum": 87,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for payerName property on PaymentResponse": {
          "stNum": 88,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: attribute payerEmail": {
          "stNum": 89,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for payerEmail property on PaymentResponse": {
          "stNum": 90,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: attribute payerPhone": {
          "stNum": 91,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for payerPhone property on PaymentResponse": {
          "stNum": 92,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentResponse interface: operation complete(PaymentComplete)": {
          "stNum": 93,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for complete(PaymentComplete) on PaymentResponse": {
          "stNum": 94,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "PaymentRequestUpdateEvent interface: existence and properties of interface object": {
          "stNum": 95,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "assert_equals: prototype of PaymentRequestUpdateEvent is not Event expected function \"function Event() { [native code] }\" but got function \"function() {\n    [native code]\n}\""
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        },
        "PaymentRequestUpdateEvent interface object length": {
          "stNum": 96,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequestUpdateEvent interface object name": {
          "stNum": 97,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequestUpdateEvent interface: existence and properties of interface prototype object": {
          "stNum": 98,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequestUpdateEvent interface: existence and properties of interface prototype object's \"constructor\" property": {
          "stNum": 99,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequestUpdateEvent interface: existence and properties of interface prototype object's @@unscopables property": {
          "stNum": 100,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequestUpdateEvent interface: operation updateWith([object Object])": {
          "stNum": 101,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Unscopable handled correctly for updateWith([object Object]) on PaymentRequestUpdateEvent": {
          "stNum": 102,
          "byUA": {
            "CH69": "PASS",
            "ED42": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 5
          }
        },
        "idl_test setup": {
          "stNum": 0,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "PaymentRequest interface: attribute onmerchantvalidation": {
          "stNum": 14,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_true: The prototype object must have a property \"onmerchantvalidation\" expected true got false",
            "FF64": "assert_true: The prototype object must have a property \"onmerchantvalidation\" expected true got false"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "PaymentRequest interface: attribute onpaymentmethodchange": {
          "stNum": 17,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_true: The prototype object must have a property \"onpaymentmethodchange\" expected true got false",
            "SI72": "assert_true: The prototype object must have a property \"onpaymentmethodchange\" expected true got false",
            "SI74": "assert_true: The prototype object must have a property \"onpaymentmethodchange\" expected true got false"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"onmerchantvalidation\" with the proper type": {
          "stNum": 28,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_inherits: property \"onmerchantvalidation\" not found in prototype chain",
            "FF64": "assert_inherits: property \"onmerchantvalidation\" not found in prototype chain"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "PaymentRequest interface: paymentRequest must inherit property \"onpaymentmethodchange\" with the proper type": {
          "stNum": 31,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_inherits: property \"onpaymentmethodchange\" not found in prototype chain",
            "SI72": "assert_inherits: property \"onpaymentmethodchange\" not found in prototype chain",
            "SI74": "assert_inherits: property \"onpaymentmethodchange\" not found in prototype chain"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentResponse interface: operation retry(PaymentValidationErrors)": {
          "stNum": 67,
          "byUA": {
            "CH71": "PASS",
            "FF64": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "FF64": "assert_own_property: interface prototype object missing non-static operation expected property \"retry\" missing",
            "SI72": "assert_own_property: interface prototype object missing non-static operation expected property \"retry\" missing",
            "SI74": "assert_own_property: interface prototype object missing non-static operation expected property \"retry\" missing"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        },
        "PaymentResponse interface: attribute onpayerdetailchange": {
          "stNum": 68,
          "byUA": {
            "CH71": "PASS",
            "FF64": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "FF64": "assert_true: The prototype object must have a property \"onpayerdetailchange\" expected true got false",
            "SI72": "assert_true: The prototype object must have a property \"onpayerdetailchange\" expected true got false",
            "SI74": "assert_true: The prototype object must have a property \"onpayerdetailchange\" expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 3
          }
        },
        "MerchantValidationEvent interface: existence and properties of interface object": {
          "stNum": 69,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing",
            "FF64": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface object length": {
          "stNum": 70,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing",
            "FF64": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface object name": {
          "stNum": 71,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing",
            "FF64": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: existence and properties of interface prototype object": {
          "stNum": 72,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing",
            "FF64": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: existence and properties of interface prototype object's \"constructor\" property": {
          "stNum": 73,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing",
            "FF64": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: existence and properties of interface prototype object's @@unscopables property": {
          "stNum": 74,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing",
            "FF64": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: attribute methodName": {
          "stNum": 75,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing",
            "FF64": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: attribute validationURL": {
          "stNum": 76,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing",
            "FF64": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: operation complete([object Object])": {
          "stNum": 77,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing",
            "FF64": "assert_own_property: self does not have own property \"MerchantValidationEvent\" expected property \"MerchantValidationEvent\" missing"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent must be primary interface of new MerchantValidationEvent(\"merchantvalidation\")": {
          "stNum": 78,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "Stringification of new MerchantValidationEvent(\"merchantvalidation\")": {
          "stNum": 79,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: new MerchantValidationEvent(\"merchantvalidation\") must inherit property \"methodName\" with the proper type": {
          "stNum": 80,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: new MerchantValidationEvent(\"merchantvalidation\") must inherit property \"validationURL\" with the proper type": {
          "stNum": 81,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: new MerchantValidationEvent(\"merchantvalidation\") must inherit property \"complete([object Object])\" with the proper type": {
          "stNum": 82,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent interface: calling complete([object Object]) on new MerchantValidationEvent(\"merchantvalidation\") with too few arguments must throw TypeError": {
          "stNum": 83,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: MerchantValidationEvent is not defined\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "PaymentMethodChangeEvent interface: existence and properties of interface object": {
          "stNum": 84,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI72": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI74": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentMethodChangeEvent interface object length": {
          "stNum": 85,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI72": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI74": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentMethodChangeEvent interface object name": {
          "stNum": 86,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI72": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI74": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentMethodChangeEvent interface: existence and properties of interface prototype object": {
          "stNum": 87,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI72": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI74": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentMethodChangeEvent interface: existence and properties of interface prototype object's \"constructor\" property": {
          "stNum": 88,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI72": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI74": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentMethodChangeEvent interface: existence and properties of interface prototype object's @@unscopables property": {
          "stNum": 89,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI72": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI74": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentMethodChangeEvent interface: attribute methodName": {
          "stNum": 90,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI72": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI74": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentMethodChangeEvent interface: attribute methodDetails": {
          "stNum": 91,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI72": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing",
            "SI74": "assert_own_property: self does not have own property \"PaymentMethodChangeEvent\" expected property \"PaymentMethodChangeEvent\" missing"
          },
          "totals": {
            "FAIL": 3,
            "PASS": 1
          }
        },
        "PaymentMethodChangeEvent must be primary interface of new PaymentMethodChangeEvent(\"paymentmethodchange\")": {
          "stNum": 92,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"TypeError: Missing required 'methodName' member of PaymentMethodChangeEventInit.\"",
            "SI72": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "SI74": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\""
          },
          "totals": {
            "FAIL": 4
          }
        },
        "Stringification of new PaymentMethodChangeEvent(\"paymentmethodchange\")": {
          "stNum": 93,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"TypeError: Missing required 'methodName' member of PaymentMethodChangeEventInit.\"",
            "SI72": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "SI74": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\""
          },
          "totals": {
            "FAIL": 4
          }
        },
        "PaymentMethodChangeEvent interface: new PaymentMethodChangeEvent(\"paymentmethodchange\") must inherit property \"methodName\" with the proper type": {
          "stNum": 94,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"TypeError: Missing required 'methodName' member of PaymentMethodChangeEventInit.\"",
            "SI72": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "SI74": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\""
          },
          "totals": {
            "FAIL": 4
          }
        },
        "PaymentMethodChangeEvent interface: new PaymentMethodChangeEvent(\"paymentmethodchange\") must inherit property \"methodDetails\" with the proper type": {
          "stNum": 95,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"TypeError: Missing required 'methodName' member of PaymentMethodChangeEventInit.\"",
            "SI72": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "SI74": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\""
          },
          "totals": {
            "FAIL": 4
          }
        },
        "PaymentRequestUpdateEvent interface: new PaymentMethodChangeEvent(\"paymentmethodchange\") must inherit property \"updateWith([object Object])\" with the proper type": {
          "stNum": 96,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"TypeError: Missing required 'methodName' member of PaymentMethodChangeEventInit.\"",
            "SI72": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "SI74": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\""
          },
          "totals": {
            "FAIL": 4
          }
        },
        "PaymentRequestUpdateEvent interface: calling updateWith([object Object]) on new PaymentMethodChangeEvent(\"paymentmethodchange\") with too few arguments must throw TypeError": {
          "stNum": 97,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "FF64": "assert_equals: Unexpected exception when evaluating object expected null but got object \"TypeError: Missing required 'methodName' member of PaymentMethodChangeEventInit.\"",
            "SI72": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\"",
            "SI74": "assert_equals: Unexpected exception when evaluating object expected null but got object \"ReferenceError: PaymentMethodChangeEvent is not defined\""
          },
          "totals": {
            "FAIL": 4
          }
        },
        "PaymentRequestUpdateEvent must be primary interface of new PaymentRequestUpdateEvent(\"paymentrequestupdate\")": {
          "stNum": 105,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        },
        "Stringification of new PaymentRequestUpdateEvent(\"paymentrequestupdate\")": {
          "stNum": 106,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        },
        "PaymentRequestUpdateEvent interface: new PaymentRequestUpdateEvent(\"paymentrequestupdate\") must inherit property \"updateWith([object Object])\" with the proper type": {
          "stNum": 107,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        },
        "PaymentRequestUpdateEvent interface: calling updateWith([object Object]) on new PaymentRequestUpdateEvent(\"paymentrequestupdate\") with too few arguments must throw TypeError": {
          "stNum": 108,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 4
          }
        },
        "Unscopable handled correctly for onpaymentmethodchange property on PaymentRequest": {
          "stNum": 26,
          "byUA": {
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Unscopable handled correctly for retry(PaymentValidationErrors) on PaymentResponse": {
          "stNum": 99,
          "byUA": {
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Unscopable handled correctly for onpayerdetailchange property on PaymentResponse": {
          "stNum": 101,
          "byUA": {
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Unscopable handled correctly for methodName property on PaymentMethodChangeEvent": {
          "stNum": 109,
          "byUA": {
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Unscopable handled correctly for methodDetails property on PaymentMethodChangeEvent": {
          "stNum": 111,
          "byUA": {
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/payment-request/onpaymentmenthodchange-attribute.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "TIMEOUT"
      },
      "UAmessage": {
        "SI74": ""
      },
      "totals": {
        "OK": 6,
        "TIMEOUT": 1
      },
      "subtests": {
        "Must have a onpaymentmethodchange IDL attribute": {
          "stNum": 0,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "FAIL",
            "SI72": "FAIL"
          },
          "UAmessage": {
            "CH69": "assert_idl_attribute: property \"onpaymentmethodchange\" not found in prototype chain",
            "CH71": "assert_idl_attribute: property \"onpaymentmethodchange\" not found in prototype chain",
            "ED42": "assert_idl_attribute: property \"onpaymentmethodchange\" not found in prototype chain",
            "SF11": "assert_idl_attribute: property \"onpaymentmethodchange\" not found in prototype chain",
            "SI72": "assert_idl_attribute: property \"onpaymentmethodchange\" not found in prototype chain"
          },
          "totals": {
            "FAIL": 5,
            "PASS": 1
          }
        },
        "onpaymentmethodchange attribute is a generic handler for \"paymentmethodchange\"": {
          "stNum": 1,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "FAIL",
            "SI72": "FAIL"
          },
          "UAmessage": {
            "CH69": "assert_true: event did not fire expected true got false",
            "CH71": "assert_true: event did not fire expected true got false",
            "ED42": "assert_true: event did not fire expected true got false",
            "SF11": "assert_true: event did not fire expected true got false",
            "SI72": "assert_true: event did not fire expected true got false"
          },
          "totals": {
            "FAIL": 5,
            "PASS": 1
          }
        },
        "onpaymentmethodchange attribute is a handler for PaymentMethodChangeEvent": {
          "stNum": 2,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "FAIL",
            "SF11": "FAIL",
            "SI72": "FAIL"
          },
          "UAmessage": {
            "CH69": "PaymentMethodChangeEvent is not defined",
            "CH71": "PaymentMethodChangeEvent is not defined",
            "ED42": "'PaymentMethodChangeEvent' is not defined",
            "FF64": "Missing required 'methodName' member of PaymentMethodChangeEventInit.",
            "SF11": "Can't find variable: PaymentMethodChangeEvent",
            "SI72": "PaymentMethodChangeEvent is not defined"
          },
          "totals": {
            "FAIL": 6
          }
        },
        "onpaymentmethodchange attribute and listeners both work": {
          "stNum": 3,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "FAIL",
            "SI72": "FAIL"
          },
          "UAmessage": {
            "CH69": "PaymentMethodChangeEvent is not defined",
            "CH71": "PaymentMethodChangeEvent is not defined",
            "ED42": "'PaymentMethodChangeEvent' is not defined",
            "SF11": "Can't find variable: PaymentMethodChangeEvent",
            "SI72": "PaymentMethodChangeEvent is not defined"
          },
          "totals": {
            "FAIL": 5,
            "PASS": 1
          }
        }
      }
    },
    "/payment-request/payment-request-abort-method.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Throws if the promise [[state]] is not \"interactive\"": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Test for PaymentRequest.abort() method": {
          "stNum": 1,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "FAIL",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "CH71": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "ED42": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "FF64": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "SF11": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "SI72": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "SI74": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\""
          },
          "totals": {
            "FAIL": 7
          }
        },
        "Test for PaymentRequest.abort() method 1": {
          "stNum": 2,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "FAIL",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "CH71": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "ED42": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "FF64": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "SF11": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "SI72": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "SI74": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\""
          },
          "totals": {
            "FAIL": 7
          }
        },
        "Calling abort() multiple times is always a new object.": {
          "stNum": 3,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/payment-request/payment-request-constructor-crash.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Don't crash if there is an abusive number of payment methods in the methodData sequence": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Don't crash if PaymentMethodData.supportedMethods is an abusive length": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Don't crash if the request id has an abusive length": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Don't crash if PaymentDetailsInit.total.label is an abusive length": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Don't crash if total.amount.value is an abusive length": {
          "stNum": 4,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Don't crash if details.displayItems has an abusive number of items": {
          "stNum": 5,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Don't crash if details.shippingOptions has an abusive number of items": {
          "stNum": 6,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Don't crash if PaymentShippingOptions.label is an abusive length": {
          "stNum": 7,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Don't crash if the PaymentShippingOptions.amount.value is an abusive length": {
          "stNum": 8,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Don't crash if PaymentItem.label is an abusive length": {
          "stNum": 9,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/payment-request-constructor.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "If details.id is missing, assign an identifier": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If details.id is missing, assign a unique identifier": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If the same id is provided, then use it": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Use ids even if they are strange": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Use provided request ID": {
          "stNum": 4,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If the length of the methodData sequence is zero, then throw a TypeError": {
          "stNum": 5,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Modifier method data must be JSON-serializable object": {
          "stNum": 6,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "assert_unreached: Unexpected error parsing stringifiable JSON: []: Failed to construct 'PaymentRequest': Data should be a JSON-serializable object Reached unreachable code",
            "SI74": "assert_unreached: Unexpected error parsing stringifiable JSON: []: Failed to construct 'PaymentRequest': Data should be a JSON-serializable object Reached unreachable code"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "Rethrow any exceptions of JSON-serializing paymentMethod.data into a string": {
          "stNum": 7,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If details.total.amount.value is not a valid decimal monetary value, then throw a TypeError": {
          "stNum": 8,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentDetailsBase members can be 0 length": {
          "stNum": 9,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If the first character of details.total.amount.value is U+002D HYPHEN-MINUS, then throw a TypeError": {
          "stNum": 10,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "For each item in details.displayItems: if item.amount.value is not a valid decimal monetary value, then throw a TypeError": {
          "stNum": 11,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Negative values are allowed for displayItems.amount.value, irrespective of total amount": {
          "stNum": 12,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "assert_unreached: shouldn't throw when given a negative value: Failed to construct 'PaymentRequest': Item label required Reached unreachable code",
            "SI74": "assert_unreached: shouldn't throw when given a negative value: Failed to construct 'PaymentRequest': Item label required Reached unreachable code"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "it handles high precision currency values without throwing": {
          "stNum": 13,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "assert_unreached: shouldn't throw when given absurd monetary values: Failed to construct 'PaymentRequest': Item label required Reached unreachable code",
            "SI74": "assert_unreached: shouldn't throw when given absurd monetary values: Failed to construct 'PaymentRequest': Item label required Reached unreachable code"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "For each option in details.shippingOptions: if option.amount.value is not a valid decimal monetary value, then throw a TypeError": {
          "stNum": 14,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If there is no selected shipping option, then PaymentRequest.shippingOption remains null": {
          "stNum": 15,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If there is a selected shipping option, and requestShipping is set, then that option becomes synchronously selected": {
          "stNum": 16,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "Failed to construct 'PaymentRequest': Item label required",
            "SI74": "Failed to construct 'PaymentRequest': Item label required"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "If requestShipping is set, and if there is a multiple selected shipping options, only the last is selected.": {
          "stNum": 17,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "Failed to construct 'PaymentRequest': Item label required",
            "SI74": "Failed to construct 'PaymentRequest': Item label required"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "If there are any duplicate shipping option ids, and shipping is requested, then throw a TypeError": {
          "stNum": 18,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected to throw a TypeError because duplicate IDs function \"() => {\n      new PaymentRequest(defaultMethods, details, { requestShipping: true });\n    }\" did not throw"
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        },
        "Throw when there are duplicate shippingOption ids, even if other values are different": {
          "stNum": 19,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected to throw a TypeError because duplicate IDs function \"() => {\n      new PaymentRequest(defaultMethods, details, { requestShipping: true });\n    }\" did not throw"
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        },
        "Throw TypeError if modifier.total.amount.value is not a valid decimal monetary value": {
          "stNum": 20,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If amount.value of additionalDisplayItems is not a valid decimal monetary value, then throw a TypeError": {
          "stNum": 21,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Modifier data must be JSON-serializable object (an Array in this case)": {
          "stNum": 22,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "FAIL",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "FF64": "assert_unreached: Unexpected exception thrown when given a list: Missing required 'amount' member of PaymentItem. Reached unreachable code",
            "SI72": "assert_unreached: Unexpected exception thrown when given a list: Failed to construct 'PaymentRequest': Data should be a JSON-serializable object Reached unreachable code",
            "SI74": "assert_unreached: Unexpected exception thrown when given a list: Failed to construct 'PaymentRequest': Data should be a JSON-serializable object Reached unreachable code"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Modifier data must be JSON-serializable object (an Object in this case)": {
          "stNum": 23,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "FAIL",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "FF64": "assert_unreached: shouldn't throw when given an object value: Missing required 'amount' member of PaymentItem. Reached unreachable code"
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        },
        "Rethrow any exceptions of JSON-serializing modifier.data": {
          "stNum": 24,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Shipping type should be valid": {
          "stNum": 25,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest.shippingAddress must initially be null": {
          "stNum": 26,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If options.requestShipping is not set, then request.shippingType attribute is null.": {
          "stNum": 27,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If options.requestShipping is true, request.shippingType will be options.shippingType.": {
          "stNum": 28,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/payment-request-ctor-currency-code-checks.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Check and canonicalize valid details.total.amount": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Check and canonicalize invalid details.total.amount and rethrow any exceptions.": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Check and canonicalize valid details.displayItems amount": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Check and canonicalize invalid details.displayItems amount and rethrow RangeError.": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Check and canonicalize valid details.shippingOptions amount.": {
          "stNum": 4,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Check and canonicalize invalid details.shippingOptions amount and rethrow RangeError.": {
          "stNum": 5,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Check and canonicalize valid modifiers[n].total amount.": {
          "stNum": 6,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Check and canonicalize invalid modifiers[n].total amount and rethrow RangeError.": {
          "stNum": 7,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Check and canonicalize valid modifiers[n].additionaDisplayItem amount.": {
          "stNum": 8,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Check and canonicalize invalid modifiers[n].additionaDisplayItem amount and rethrow RangeError.": {
          "stNum": 9,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" did not throw",
            "SI72": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")",
            "SI74": "assert_throws: Expected smoke test to throw. function \"function smokeTest() {\n  new PaymentRequest(defaultMethods, invalidTotal);\n}\" threw object \"TypeError: Failed to construct 'PaymentRequest': '¡INVALID!' is not a valid ISO 4217 currency code, should be 3 upper case letters [A-Z]\" (\"TypeError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        }
      }
    },
    "/payment-request/payment-request-ctor-pmi-handling.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Must support valid standard URL PMIs": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Must not throw on syntactically valid standardized payment method identifiers, even if they are not supported": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Must throw on syntactically invalid standardized payment method identifiers": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: expected RangeError processing invalid standardized PMI \"basic-💳\" function \"() => {\n        const methods = [{ supportedMethods: invalidMethod }];\n        new PaymentRequest(methods, defaultDetails);\n      }\" did not throw",
            "SI72": "assert_throws: expected RangeError processing invalid standardized PMI \"basic-💳\" function \"() => {\n        const methods = [{ supportedMethods: invalidMethod }];\n        new PaymentRequest(methods, defaultDetails);\n      }\" did not throw",
            "SI74": "assert_throws: expected RangeError processing invalid standardized PMI \"basic-💳\" function \"() => {\n        const methods = [{ supportedMethods: invalidMethod }];\n        new PaymentRequest(methods, defaultDetails);\n      }\" did not throw"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        },
        "Constructor MUST throw if given an invalid URL-based payment method identifier": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_throws: expected RangeError processing invalid URL PMI \"https://username@example.com/pay\" function \"() => {\n        const methods = [{ supportedMethods: invalidMethod }];\n        new PaymentRequest(methods, defaultDetails);\n      }\" did not throw",
            "SI72": "assert_throws: expected RangeError processing invalid URL PMI \"https://username@example.com/pay\" function \"() => {\n        const methods = [{ supportedMethods: invalidMethod }];\n        new PaymentRequest(methods, defaultDetails);\n      }\" did not throw",
            "SI74": "assert_throws: expected RangeError processing invalid URL PMI \"https://username@example.com/pay\" function \"() => {\n        const methods = [{ supportedMethods: invalidMethod }];\n        new PaymentRequest(methods, defaultDetails);\n      }\" did not throw"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        }
      }
    },
    "/payment-request/payment-request-id-attribute.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequest's id attribute's value can be set via PaymentDetailsInit dictionary": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "PaymentRequest's id attribute must be a UUID when PaymentDetailsInit.id is missing": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "FAIL",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "FF64": "assert_true: Expected PaymentRequest.id be a UUID expected true got false"
          },
          "totals": {
            "PASS": 6,
            "FAIL": 1
          }
        }
      }
    },
    "/payment-request/payment-request-insecure.http.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequest constructor must not be exposed in insecure context": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "ED42": "assert_false: expected false got true",
            "SI72": "assert_false: expected false got true",
            "SI74": "assert_false: expected false got true"
          },
          "totals": {
            "PASS": 4,
            "FAIL": 3
          }
        }
      }
    },
    "/payment-request/payment-request-not-exposed.https.worker.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "PaymentRequest constructor must not be exposed in worker global scope": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/payment-request-onshippingaddresschange-attribute.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Must have a onshippingaddresschange IDL attribute": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "onshippingaddresschange attribute is a generic handler for \"shippingaddresschange\"": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "onshippingaddresschange attribute is a handler for PaymentRequestUpdateEvent": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "onshippingaddresschange attribute and listeners both work": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/payment-request-onshippingoptionchange-attribute.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Must have a onshippingoptionchange IDL attribute": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "onshippingoptionchange attribute is a generic handler for \"shippingoptionchange\"": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "onshippingoptionchange attribute is a handler for PaymentRequestUpdateEvent": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "onshippingoptionchange attribute and listeners both work": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/payment-request-shippingAddress-attribute.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Must have a .shippingAddress IDL attribute.": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        ".shippingAddress attribute must default to null.": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/payment-request-shippingOption-attribute.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Must have a .shippingOption IDL attribute.": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        ".shippingOption attribute must default to null.": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If there is a single shipping option, but selected is false, then .shippingOption must be null.": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If there are multiple shipping options all with `selected` set to false, then .shippingOption is null.": {
          "stNum": 3,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "Given multiple shipping options, it must use the selected shipping option for .shippingOption value.": {
          "stNum": 4,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        },
        "If there are multiple of the shipping options with selected true, then .shippingOption is the last selected shipping option in order.": {
          "stNum": 5,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 7
          }
        }
      }
    },
    "/payment-request/payment-request-shippingType-attribute.https.html": {
      "byUA": {
        "CH69": "OK",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 7
      },
      "subtests": {
        "Must have a shippingType IDL attribute": {
          "stNum": 0,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "Failed to construct 'PaymentRequest': Item label required",
            "SI74": "Failed to construct 'PaymentRequest': Item label required"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "If options.requestShipping is false, then request.shippingType attribute is null.": {
          "stNum": 1,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "Failed to construct 'PaymentRequest': Item label required",
            "SI74": "Failed to construct 'PaymentRequest': Item label required"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        },
        "If options.requestShipping is true, request.shippingType will be options.shippingType.": {
          "stNum": 2,
          "byUA": {
            "CH69": "PASS",
            "CH71": "PASS",
            "ED42": "PASS",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "SI72": "Failed to construct 'PaymentRequest': Item label required",
            "SI74": "Failed to construct 'PaymentRequest': Item label required"
          },
          "totals": {
            "PASS": 5,
            "FAIL": 2
          }
        }
      }
    },
    "/payment-request/payment-request-show-method.https.html": {
      "byUA": {
        "CH69": "TIMEOUT",
        "CH71": "OK",
        "ED42": "TIMEOUT",
        "FF64": "OK",
        "SF11": "OK",
        "SI72": "TIMEOUT",
        "SI74": "OK"
      },
      "UAmessage": {},
      "totals": {
        "TIMEOUT": 3,
        "OK": 4
      },
      "subtests": {
        "Calling show() without being triggered by user interaction throws": {
          "stNum": 0,
          "byUA": {
            "CH69": "TIMEOUT",
            "CH71": "FAIL",
            "ED42": "TIMEOUT",
            "FF64": "PASS",
            "SF11": "PASS",
            "SI72": "TIMEOUT",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "Test timed out",
            "CH71": "assert_throws: function \"function() { throw e }\" threw object \"AbortError: Request cancelled\" that is not a DOMException SecurityError: property \"code\" is equal to 20, expected 18",
            "ED42": "Test timed out",
            "SI72": "Test timed out",
            "SI74": "assert_throws: function \"function () { throw e }\" threw object \"AbortError: Request cancelled\" that is not a DOMException SecurityError: property \"code\" is equal to 20, expected 18"
          },
          "totals": {
            "TIMEOUT": 3,
            "FAIL": 2,
            "PASS": 2
          }
        },
        "Throws if the promise [[state]] is not 'created'.": {
          "stNum": 1,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL",
            "SI72": "NOTRUN",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "FF64": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "SI74": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\""
          },
          "totals": {
            "FAIL": 3,
            "NOTRUN": 1
          }
        },
        "If the user agent's \"payment request is showing\" boolean is true, then return a promise rejected with an \"AbortError\" DOMException.": {
          "stNum": 2,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL",
            "SI72": "NOTRUN",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "FF64": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "SI74": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\""
          },
          "totals": {
            "FAIL": 3,
            "NOTRUN": 1
          }
        },
        "If payment method consultation produces no supported method of payment, then return a promise rejected with a \"NotSupportedError\" DOMException.": {
          "stNum": 3,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL",
            "SI72": "NOTRUN",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH71": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "FF64": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "SI74": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\""
          },
          "totals": {
            "FAIL": 3,
            "NOTRUN": 1
          }
        },
        "Calling show() multiple times is always a new object.": {
          "stNum": 4,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\"",
            "FF64": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\""
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/payment-request/rejects_if_not_active.https.html": {
      "byUA": {
        "CH69": "TIMEOUT",
        "CH71": "OK",
        "ED42": "OK",
        "FF64": "TIMEOUT",
        "SF11": "ERROR",
        "SI72": "OK",
        "SI74": "OK"
      },
      "UAmessage": {
        "SF11": "show() must be triggered by user activation."
      },
      "totals": {
        "TIMEOUT": 2,
        "OK": 4,
        "ERROR": 1
      },
      "subtests": {
        "PaymentRequest.show() aborts if the document is not active": {
          "stNum": 0,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "TIMEOUT",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "assert_throws: Inactive document, so must throw AbortError function \"function() { throw e }\" threw object \"InvalidStateError: Already called show() once\" that is not a DOMException AbortError: property \"code\" is equal to 11, expected 20",
            "CH71": "assert_throws: Inactive document, so must throw AbortError function \"function() { throw e }\" threw object \"InvalidStateError: Already called show() once\" that is not a DOMException AbortError: property \"code\" is equal to 11, expected 20",
            "ED42": "promise_test: Unhandled rejection with value: object \"TypeError: Permission denied\"",
            "FF64": "Test timed out",
            "SF11": "promise_test: Unhandled rejection with value: object \"InvalidStateError: The object is in an invalid state.\"",
            "SI72": "assert_throws: Inactive document, so must throw AbortError function \"function () { throw e }\" threw object \"InvalidStateError: Already called show() once\" that is not a DOMException AbortError: property \"code\" is equal to 11, expected 20",
            "SI74": "assert_throws: Inactive document, so must throw AbortError function \"function () { throw e }\" threw object \"InvalidStateError: Already called show() once\" that is not a DOMException AbortError: property \"code\" is equal to 11, expected 20"
          },
          "totals": {
            "FAIL": 6,
            "TIMEOUT": 1
          }
        },
        "PaymentRequest.show() aborts if the document is active, but not fully active": {
          "stNum": 1,
          "byUA": {
            "CH69": "FAIL",
            "CH71": "FAIL",
            "ED42": "FAIL",
            "FF64": "NOTRUN",
            "SF11": "FAIL",
            "SI72": "FAIL",
            "SI74": "FAIL"
          },
          "UAmessage": {
            "CH69": "assert_throws: Active, but not fully active, so must throw AbortError function \"function() { throw e }\" threw object \"InvalidStateError: Already called show() once\" that is not a DOMException AbortError: property \"code\" is equal to 11, expected 20",
            "CH71": "assert_throws: Active, but not fully active, so must throw AbortError function \"function() { throw e }\" threw object \"InvalidStateError: Already called show() once\" that is not a DOMException AbortError: property \"code\" is equal to 11, expected 20",
            "ED42": "promise_test: Unhandled rejection with value: object \"TypeError: Permission denied\"",
            "SF11": "promise_test: Unhandled rejection with value: object \"ReferenceError: Can't find variable: iframe\"",
            "SI72": "assert_throws: Active, but not fully active, so must throw AbortError function \"function () { throw e }\" threw object \"InvalidStateError: Already called show() once\" that is not a DOMException AbortError: property \"code\" is equal to 11, expected 20",
            "SI74": "assert_throws: Active, but not fully active, so must throw AbortError function \"function () { throw e }\" threw object \"InvalidStateError: Already called show() once\" that is not a DOMException AbortError: property \"code\" is equal to 11, expected 20"
          },
          "totals": {
            "FAIL": 6,
            "NOTRUN": 1
          }
        },
        "If a payment request is showing, but its document is navigated away (so no longer fully active), the payment request aborts.": {
          "stNum": 2,
          "byUA": {
            "CH69": "TIMEOUT",
            "CH71": "PASS",
            "ED42": "FAIL",
            "FF64": "NOTRUN",
            "SF11": "FAIL",
            "SI72": "PASS",
            "SI74": "PASS"
          },
          "UAmessage": {
            "CH69": "Test timed out",
            "ED42": "promise_test: Unhandled rejection with value: object \"Error: Can't execute code from a freed script\"",
            "SF11": "assert_throws: The iframe was navigated away, so showPromise must reject with AbortError function \"function () { throw e }\" threw object \"SecurityError: show() must be triggered by user activation.\" that is not a DOMException AbortError: property \"code\" is equal to 18, expected 20"
          },
          "totals": {
            "TIMEOUT": 1,
            "PASS": 3,
            "FAIL": 2,
            "NOTRUN": 1
          }
        }
      }
    },
    "/payment-request/MerchantValidationEvent/complete-method.https.html": {
      "byUA": {
        "CH71": "OK",
        "FF64": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2
      },
      "subtests": {
        "If event's isTrusted attribute is false, then then throw an InvalidStateError DOMException.": {
          "stNum": 0,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/payment-request/MerchantValidationEvent/constructor.http.html": {
      "byUA": {
        "CH71": "OK",
        "FF64": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2
      },
      "subtests": {
        "MerchantValidationEvent constructor must not be exposed in insecure context": {
          "stNum": 0,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/payment-request/MerchantValidationEvent/constructor.https.html": {
      "byUA": {
        "CH71": "OK",
        "FF64": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2
      },
      "subtests": {
        "MerchantValidationEvent can be constructed in secure-context.": {
          "stNum": 0,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent can be constructed with an EventInitDict, even if not trusted.": {
          "stNum": 1,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent can be dispatched, even if not trusted.": {
          "stNum": 2,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "Must have a validationURL IDL attribute, which is initialized with to the validationURL dictionary value.": {
          "stNum": 3,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "Must throw TypeError if initialized with an invalid URL.": {
          "stNum": 4,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_throws: function \"() => {\n    new MerchantValidationEvent(\"test\", { validationURL });\n  }\" threw object \"ReferenceError: MerchantValidationEvent is not defined\" (\"ReferenceError\") expected object \"TypeError\" (\"TypeError\")",
            "FF64": "assert_throws: function \"() => {\n    new MerchantValidationEvent(\"test\", { validationURL });\n  }\" threw object \"ReferenceError: MerchantValidationEvent is not defined\" (\"ReferenceError\") expected object \"TypeError\" (\"TypeError\")"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "Relative validationURLs use the document as the base.": {
          "stNum": 5,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "Must have a methodName IDL attribute, which is initialized with to the methodName dictionary value.": {
          "stNum": 6,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "When no methodName is passed, methodName attribute defaults to the empty string": {
          "stNum": 7,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent can be constructed with valid PMIs": {
          "stNum": 8,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "MerchantValidationEvent can't be constructed with invalid PMIs": {
          "stNum": 9,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_throws: expected to throw when constructed with invalid PMI: 'basic-💳' function \"() => {\n        const event = new MerchantValidationEvent(\"test\", { methodName });\n      }\" threw object \"ReferenceError: MerchantValidationEvent is not defined\" (\"ReferenceError\") expected object \"RangeError\" (\"RangeError\")",
            "FF64": "assert_throws: expected to throw when constructed with invalid PMI: 'basic-💳' function \"() => {\n        const event = new MerchantValidationEvent(\"test\", { methodName });\n      }\" threw object \"ReferenceError: MerchantValidationEvent is not defined\" (\"ReferenceError\") expected object \"RangeError\" (\"RangeError\")"
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/payment-request/onmerchantvalidation-attribute.https.html": {
      "byUA": {
        "CH71": "OK",
        "FF64": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2
      },
      "subtests": {
        "Must have a onmerchantvalidation IDL attribute": {
          "stNum": 0,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_idl_attribute: property \"onmerchantvalidation\" not found in prototype chain",
            "FF64": "assert_idl_attribute: property \"onmerchantvalidation\" not found in prototype chain"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "onmerchantvalidation attribute is a generic handler for \"merchantvalidation\"": {
          "stNum": 1,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "assert_true: event did not fire expected true got false",
            "FF64": "assert_true: event did not fire expected true got false"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "onmerchantvalidation attribute is a handler for MerchantValidationEvent": {
          "stNum": 2,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "onmerchantvalidation attribute and listeners both work": {
          "stNum": 3,
          "byUA": {
            "CH71": "FAIL",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "CH71": "MerchantValidationEvent is not defined",
            "FF64": "MerchantValidationEvent is not defined"
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/payment-request/payment-request-canmakepayment-method.https.html": {
      "byUA": {
        "CH71": "ERROR",
        "FF64": "OK"
      },
      "UAmessage": {
        "CH71": "Cannot query payment request"
      },
      "totals": {
        "ERROR": 1,
        "OK": 1
      },
      "subtests": {
        "If request.[[state]] is \"created\", then return a promise that resolves to true for known method.": {
          "stNum": 0,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "If payment method identifier and serialized parts are supported, resolve promise with true.": {
          "stNum": 1,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "If payment method identifier is unknown, resolve promise with false.": {
          "stNum": 2,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Optionally, at the user agent's discretion, return a promise rejected with a \"NotAllowedError\" DOMException.": {
          "stNum": 3,
          "byUA": {
            "CH71": "TIMEOUT",
            "FF64": "PASS"
          },
          "UAmessage": {
            "CH71": "Test timed out"
          },
          "totals": {
            "TIMEOUT": 1,
            "PASS": 1
          }
        },
        "If request.[[state]] is \"interactive\", then return a promise rejected with an \"InvalidStateError\" DOMException.": {
          "stNum": 4,
          "byUA": {
            "CH71": "NOTRUN",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "FF64": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\""
          },
          "totals": {
            "NOTRUN": 1,
            "FAIL": 1
          }
        },
        "If request.[[state]] is \"closed\", then return a promise rejected with an \"InvalidStateError\" DOMException.": {
          "stNum": 5,
          "byUA": {
            "CH71": "NOTRUN",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "FF64": "promise_test: Unhandled rejection with value: object \"Error: unimplemented\""
          },
          "totals": {
            "NOTRUN": 1,
            "FAIL": 1
          }
        },
        "Calling canMakePayment() multiple times is always a new object.": {
          "stNum": 6,
          "byUA": {
            "CH71": "PASS",
            "FF64": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/payment-request/payment-response/onpayerdetailchange-attribute.https.html": {
      "byUA": {
        "CH71": "OK",
        "FF64": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2
      },
      "subtests": {
        "PaymentResponse inherits from EventTarget": {
          "stNum": 0,
          "byUA": {
            "CH71": "PASS",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "FF64": "assert_equals: expected function \"function EventTarget() {\n    [native code]\n}\" but got function \"function () {\n}\""
          },
          "totals": {
            "PASS": 1,
            "FAIL": 1
          }
        },
        "PaymentResponse has an onpayerdetailchange in the prototype chain": {
          "stNum": 1,
          "byUA": {
            "CH71": "PASS",
            "FF64": "FAIL"
          },
          "UAmessage": {
            "FF64": "assert_true: expected true got false"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 1
          }
        }
      }
    },
    "/payment-request/payment-response/onpayerdetailchange-attribute.manual.https.html": {
      "byUA": {
        "CH71": "TIMEOUT",
        "FF64": "TIMEOUT"
      },
      "UAmessage": {
        "CH71": "",
        "FF64": ""
      },
      "totals": {
        "TIMEOUT": 2
      },
      "subtests": {
        "/payment-request/payment-response/onpayerdetailchange-attribute.manual.https.html": {
          "stNum": 0,
          "byUA": {
            "CH71": "TIMEOUT",
            "FF64": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2
          }
        }
      }
    }
  }
}