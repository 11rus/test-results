{
  "ua": [
    "CH55",
    "ED14",
    "FF52"
  ],
  "results": {
    "/encrypted-media/clearkey-check-initdata-type.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey support for \"webm\".": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey support for \"cenc\".": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey support for \"keyids\".": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/encrypted-media/clearkey-events.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "TIMEOUT",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2,
        "TIMEOUT": 1
      },
      "subtests": {
        "org.w3.clearkey, basic events": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/encrypted-media/clearkey-generate-request-disallowed-input.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "TIMEOUT",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2,
        "TIMEOUT": 1
      },
      "subtests": {
        "org.w3.clearkey, temporary, webm, initData longer than 64Kb characters": {
          "byUA": {
            "CH55": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "org.w3.clearkey, temporary, cenc, initData longer than 64Kb characters": {
          "byUA": {
            "CH55": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "org.w3.clearkey, temporary, keyids, initData longer than 64Kb characters": {
          "byUA": {
            "CH55": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "org.w3.clearkey, temporary, cenc, invalid initdata (invalid pssh)": {
          "byUA": {
            "CH55": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "org.w3.clearkey, temporary, cenc, invalid initdata (not pssh)": {
          "byUA": {
            "CH55": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "org.w3.clearkey, temporary, keyids, invalid initdata (too short key ID)": {
          "byUA": {
            "CH55": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "org.w3.clearkey, temporary, keyids, invalid initdata (too long key ID)": {
          "byUA": {
            "CH55": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/encrypted-media/clearkey-invalid-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "Update with invalid Clear Key license": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/encrypted-media/clearkey-keystatuses-multiple-sessions.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "TIMEOUT",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2,
        "TIMEOUT": 1
      },
      "subtests": {
        "org.w3.clearkey, temporary, keystatuses, multiple sessions": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/encrypted-media/clearkey-keystatuses.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "TIMEOUT",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2,
        "TIMEOUT": 1
      },
      "subtests": {
        "org.w3.clearkey, temporary, keystatuses": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "FF52": "assert_equals: expected 0 but got 2"
          },
          "totals": {
            "PASS": 1,
            "FAIL": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-destroy-persistent-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, persistent-license, mp4, playback, destroy and acknowledge": {
          "byUA": {
            "CH55": "POLYFILL",
            "ED14": "TIMEOUT",
            "FF52": "POLYFILL"
          },
          "UAmessage": {},
          "totals": {
            "POLYFILL": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-persistent-license-events.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, persistent-license, mp4, playback, check events": {
          "byUA": {
            "CH55": "POLYFILL",
            "ED14": "TIMEOUT",
            "FF52": "POLYFILL"
          },
          "UAmessage": {},
          "totals": {
            "POLYFILL": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-persistent-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, persistent-license, mp4playback": {
          "byUA": {
            "CH55": "POLYFILL",
            "ED14": "TIMEOUT",
            "FF52": "POLYFILL"
          },
          "UAmessage": {},
          "totals": {
            "POLYFILL": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-persistent-usage-record-events.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, persistent-usage-record, mp4, playback, check events": {
          "byUA": {
            "CH55": "POLYFILL",
            "ED14": "TIMEOUT",
            "FF52": "POLYFILL"
          },
          "UAmessage": {},
          "totals": {
            "POLYFILL": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-persistent-usage-record.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, persistent-usage-record, mp4playback": {
          "byUA": {
            "CH55": "POLYFILL",
            "ED14": "TIMEOUT",
            "FF52": "POLYFILL"
          },
          "UAmessage": {},
          "totals": {
            "POLYFILL": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-retrieve-destroy-persistent-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, persistent-license, mp4, playback, retrieve, playback and destroy": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-retrieve-persistent-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, persistent-license, mp4, playback, retrieve and playback": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-retrieve-persistent-usage-record.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, persistent-usage-record, mp4, playback, retrieve in new window": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-encrypted-clear-sources.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback, encrypted and clear sources": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-events.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback, check events": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-multikey.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback, multikey audio/video": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-multisession.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback with multiple sessions, multikey video": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-setMediaKeys-after-src.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback, setMediaKeys after setting video.src": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-setMediaKeys-after-update.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback, setMediaKeys after updating session": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-setMediaKeys-immediately.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback, setMediaKeys first": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-setMediaKeys-onencrypted.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback, setMediaKeys in encrypted event": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-waitingforkey.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, successful playback, temporary, mp4, waitingforkey event, 1 key": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback, single key": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-unique-origin.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "Unique origin is unable to create MediaKeys": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/encrypted-media/clearkey-not-callable-after-createsession.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, temporary, update() immediately after createSession()": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {
            "ED14": "promise_test: Unhandled rejection with value: object \"NotSupportedError\""
          },
          "totals": {
            "PASS": 2,
            "FAIL": 1
          }
        },
        "org.w3.clearkey, temporary, close() immediately after createSession()": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {
            "ED14": "promise_test: Unhandled rejection with value: object \"NotSupportedError\""
          },
          "totals": {
            "PASS": 2,
            "FAIL": 1
          }
        },
        "org.w3.clearkey, temporary, remove() immediately after createSession()": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {
            "ED14": "promise_test: Unhandled rejection with value: object \"NotSupportedError\""
          },
          "totals": {
            "PASS": 2,
            "FAIL": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-update-non-ascii-input.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey test handling of non-ASCII responses for update()": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {
            "ED14": "assert_unreached: Error: NotSupportedError Reached unreachable code"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 1
          }
        }
      }
    },
    "/encrypted-media/drm-check-initdata-type.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm support for \"webm\".": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm support for \"cenc\".": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm support for \"keyids\".": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/encrypted-media/drm-events.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, basic events": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-expiration.html": {
      "byUA": {
        "CH55": "TIMEOUT",
        "ED14": "TIMEOUT",
        "FF52": "TIMEOUT"
      },
      "UAmessage": {},
      "totals": {
        "TIMEOUT": 3
      },
      "subtests": {
        "/encrypted-media/drm-expiration.html": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/drm-generate-request-disallowed-input.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, webm, initData longer than 64Kb characters": {
          "byUA": {
            "CH55": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_unreached: generateRequest() succeeded unexpectedly Reached unreachable code"
          },
          "totals": {
            "FAIL": 2
          }
        },
        "drm, temporary, cenc, initData longer than 64Kb characters": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "ED14": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 3
          }
        },
        "drm, temporary, cenc, invalid initdata (invalid pssh)": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "ED14": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 3
          }
        },
        "drm, temporary, cenc, invalid initdata (not pssh)": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "ED14": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 3
          }
        },
        "drm, temporary, keyids, initData longer than 64Kb characters": {
          "byUA": {
            "ED14": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "ED14": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "drm, temporary, keyids, invalid initdata (too short key ID)": {
          "byUA": {
            "ED14": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "ED14": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        },
        "drm, temporary, keyids, invalid initdata (too long key ID)": {
          "byUA": {
            "ED14": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "ED14": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\"",
            "FF52": "assert_equals: expected \"TypeError\" but got \"InvalidAccessError\""
          },
          "totals": {
            "FAIL": 2
          }
        }
      }
    },
    "/encrypted-media/drm-invalid-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "TIMEOUT",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2,
        "TIMEOUT": 1
      },
      "subtests": {
        "Update with invalid Clear Key license": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/encrypted-media/drm-keystatuses-multiple-sessions.html": {
      "byUA": {
        "CH55": "TIMEOUT",
        "ED14": "TIMEOUT",
        "FF52": "TIMEOUT"
      },
      "UAmessage": {},
      "totals": {
        "TIMEOUT": 3
      },
      "subtests": {
        "drm, temporary, keystatuses, multiple sessions": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {
            "CH55": "Test timed out",
            "ED14": "Test timed out",
            "FF52": "Test timed out"
          },
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/drm-keystatuses.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, keystatuses": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "FF52": "assert_equals: expected 0 but got 2"
          },
          "totals": {
            "TIMEOUT": 2,
            "FAIL": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-onencrypted.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "encrypted fired on encrypted media file.": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-destroy-persistent-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, persistent-license, mp4, playback, destroy and acknowledge": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-persistent-license-events.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, persistent-license, mp4, playback, check events": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-persistent-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, persistent-license, mp4playback": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-persistent-usage-record-events.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "TIMEOUT",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 2,
        "TIMEOUT": 1
      },
      "subtests": {
        "drm, persistent-usage-record, mp4, playback, check events": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {
            "ED14": "Test timed out"
          },
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-retrieve-persistent-usage-record.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, persistent-usage-record, mp4, playback, retrieve in new window": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "FAIL",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {
            "ED14": "Unable to set property 'onload' of undefined or null reference"
          },
          "totals": {
            "TIMEOUT": 2,
            "FAIL": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-encrypted-clear-sources.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback, encrypted and clear sources": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-multikey.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback, multikey audio/video": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-multisession.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback with multiple sessions, multikey video": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-setMediaKeys-after-src.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback, setMediaKeys after setting video.src": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-setMediaKeys-after-update.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback, setMediaKeys after updating session": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-setMediaKeys-immediately.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback, setMediaKeys first": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-setMediaKeys-onencrypted.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback, setMediaKeys in encrypted event": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-two-videos.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback two videos": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-waitingforkey.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "ERROR",
        "FF52": "OK"
      },
      "UAmessage": {
        "ED14": "Error: assert_equals: expected 1 but got 0"
      },
      "totals": {
        "OK": 2,
        "ERROR": 1
      },
      "subtests": {
        "drm, successful playback, temporary, mp4, waitingforkey event, 1 key": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {
            "ED14": "Test timed out"
          },
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback, single key": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 2,
            "PASS": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-unique-origin.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "Unique origin is unable to create MediaKeys": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/encrypted-media/drm-not-callable-after-createsession.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, update() immediately after createSession()": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, temporary, close() immediately after createSession()": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, temporary, remove() immediately after createSession()": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/encrypted-media/drm-temporary-license-type.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, cannot load persistent license into temporary session": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "FF52": "assert_unreached: Update with incorrect license type should fail Reached unreachable code"
          },
          "totals": {
            "TIMEOUT": 2,
            "FAIL": 1
          }
        }
      }
    },
    "/encrypted-media/idlharness.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "Navigator interface: operation requestMediaKeySystemAccess(DOMString,[object Object])": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "HTMLMediaElement interface: attribute mediaKeys": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "HTMLMediaElement interface: attribute onencrypted": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "HTMLMediaElement interface: attribute onwaitingforkey": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "HTMLMediaElement interface: operation setMediaKeys(MediaKeys)": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "MediaKeySystemAccess interface: existence and properties of interface object": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySystemAccess interface object length": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeySystemAccess interface object name": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySystemAccess interface: existence and properties of interface prototype object": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeySystemAccess interface: existence and properties of interface prototype object's \"constructor\" property": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySystemAccess interface: attribute keySystem": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySystemAccess interface: operation getConfiguration()": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySystemAccess interface: operation createMediaKeys()": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "MediaKeys interface: existence and properties of interface object": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeys interface object length": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeys interface object name": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeys interface: existence and properties of interface prototype object": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeys interface: existence and properties of interface prototype object's \"constructor\" property": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeys interface: operation createSession(MediaKeySessionType)": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeys interface: operation setServerCertificate(BufferSource)": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "MediaKeySession interface: existence and properties of interface object": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeySession interface object length": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeySession interface object name": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySession interface: existence and properties of interface prototype object": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeySession interface: existence and properties of interface prototype object's \"constructor\" property": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySession interface: attribute sessionId": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySession interface: attribute expiration": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySession interface: attribute closed": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySession interface: attribute keyStatuses": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeySession interface: attribute onkeystatuseschange": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeySession interface: attribute onmessage": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeySession interface: operation generateRequest(DOMString,BufferSource)": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "MediaKeySession interface: operation load(DOMString)": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "MediaKeySession interface: operation update(BufferSource)": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "MediaKeySession interface: operation close()": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "MediaKeySession interface: operation remove()": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "MediaKeyStatusMap interface: existence and properties of interface object": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeyStatusMap interface object length": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeyStatusMap interface object name": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeyStatusMap interface: existence and properties of interface prototype object": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeyStatusMap interface: existence and properties of interface prototype object's \"constructor\" property": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeyStatusMap interface: attribute size": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeyStatusMap interface: operation has(BufferSource)": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeyStatusMap interface: operation get(BufferSource)": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeyMessageEvent interface: existence and properties of interface object": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeyMessageEvent interface object length": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {},
          "totals": {}
        },
        "MediaKeyMessageEvent interface object name": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeyMessageEvent interface: existence and properties of interface prototype object": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaKeyMessageEvent interface: existence and properties of interface prototype object's \"constructor\" property": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeyMessageEvent interface: attribute messageType": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaKeyMessageEvent interface: attribute message": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaEncryptedEvent interface: existence and properties of interface object": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaEncryptedEvent interface object length": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaEncryptedEvent interface object name": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaEncryptedEvent interface: existence and properties of interface prototype object": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "MediaEncryptedEvent interface: existence and properties of interface prototype object's \"constructor\" property": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaEncryptedEvent interface: attribute initDataType": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "MediaEncryptedEvent interface: attribute initData": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-multikey-sequential.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, successful playback, temporary, mp4, multiple keys, sequential": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "TIMEOUT",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2,
            "TIMEOUT": 1
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-playback-temporary-two-videos.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "TIMEOUT",
        "FF52": "OK"
      },
      "UAmessage": {
        "ED14": ""
      },
      "totals": {
        "OK": 2,
        "TIMEOUT": 1
      },
      "subtests": {
        "org.w3.clearkey, temporary, mp4, playback two videos": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        }
      }
    },
    "/encrypted-media/clearkey-mp4-requestmediakeysystemaccess.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "org.w3.clearkey, requestMediaKeySystemAccess: Empty Key System () should result in InvalidAccessError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Unsupported Key System (com.example.unsupported) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Key System ending in \".\" (org.w3.clearkey.) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Capitalized Key System (ORG.W3.CLEARKEY) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Non-ASCII Key System (org.w3.clearkeyʏ) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Root domain of Key System alone (org) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Root domain of Key System, with dot (org.) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Domain of Key System along (org.w3) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Domain of Key System, with dot (org.w3.) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Child of Key System should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Prefixed Key System should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Incomplete Key System name (org.w3.learkey) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Incomplete Key System name (org.w3.clearke) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Leading space in Key System name ( org.w3.clearkey) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Extra space in Key System name (org.w3 .clearkey) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Trailing space in Key System name (org.w3.clearkey ) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Leading dot in Key System name (.org.w3.clearkey) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Trailing dot in Key System name (org.w3..clearkey) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Trailing dot in Key System name (org.w3.clearkey.) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Key System name is case sensitive (ORG.W3.CLEARKEY) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Empty supportedConfigurations should result in InvalidAccessError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Empty configuration": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Basic supported configuration": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Partially supported configuration": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Supported audio codec": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "ContentType formatting must be preserved": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Unsupported audio codec ('audio/webm; codecs=fake') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Unsupported video codec () should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Mismatched audio container/codec ('audio/webm; codecs=mp4a','audio/webm; codecs=mp4a.40.2') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Video codec specified in audio field ('video/mp4;codecs=\"avc1.4d401e\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Audio codec specified in video field ('audio/mp4;codecs=\"mp4a.40.2\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Mismatched audio container/codec ('audio/webm; codecs=avc1','audio/webm; codecs=avc1.42e01e') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Mismatched audio container/codec ('audio/mp4; codecs=vorbis') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Two configurations, one supported": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Two configurations, both supported": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Audio MIME type does not support video codecs (webm) ('audio/webm; codecs=\"vp8,vorbis\"','audio/webm; codecs=\"vorbis, vp8\"','audio/webm; codecs=\"vp8\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Audio MIME type does not support video codecs (mp4) ('audio/mp4; codecs=\"avc1\"','audio/mp4; codecs=\"avc1.4d401e\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Video MIME type does not support audio codecs (webm) ('video/webm; codecs=\"vp8,vorbis\"','video/webm; codecs=\"vorbis, vp8\"','video/webm; codecs=\"vorbis\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Video MIME type does not support audio codecs (mp4) ('video/mp4; codecs=\"mp4a\"','video/mp4; codecs=\"mp4a.40.2\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: WebM audio does not support AVC1/AAC ('audio/webm; codecs=\"aac\"','audio/webm; codecs=\"avc1\"','audio/webm; codecs=\"vp8,aac\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: WebM video does not support AVC1/AAC ('video/webm; codecs=\"aac\"','video/webm; codecs=\"avc1\"','video/webm; codecs=\"vp8,aac\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Leading space in contentType": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Space before ; in contentType": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Trailing space in contentType": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "Space at start of codecs parameter": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Space at end of codecs parameter": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Video/": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Codecs=": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Upper case MIME type": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "CODECS=": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Unrecognized foo with webm ('video/webm; foo=\"bar\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code",
            "FF52": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 1
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Unrecognized foo with mp4 ('video/mp4; foo=\"bar\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code",
            "FF52": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 1
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: Unrecognized foo with codecs ('video/mp4;codecs=\"avc1.4d401e\"; foo=\"bar\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code",
            "FF52": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 1
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: contentType: 'fake' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: contentType: 'audio/fake' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: contentType: 'video/fake' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: contentType: 'video/mp4;codecs=\"AVC1.4D401E\"' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "org.w3.clearkey, requestMediaKeySystemAccess: contentType: 'video/mp4;codecs=\",avc1.4d401e\"' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-persistent-usage-record.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, persistent-usage-record, mp4playback": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-retrieve-destroy-persistent-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, persistent-license, mp4, playback, retrieve, playback and destroy": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-retrieve-persistent-license.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, persistent-license, mp4, playback, retrieve, playback": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "TIMEOUT"
          },
          "UAmessage": {},
          "totals": {
            "TIMEOUT": 3
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-events.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, temporary, mp4, playback, check events": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "FF52": "assert_array_equals: Expected events sequence lengths differ, expected 9 got 10"
          },
          "totals": {
            "TIMEOUT": 2,
            "FAIL": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-playback-temporary-multikey-sequential.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, successful playback, temporary, mp4, multiple keys, sequential": {
          "byUA": {
            "CH55": "TIMEOUT",
            "ED14": "TIMEOUT",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "FF52": "assert_equals: Playback should start with a single key / session expected 1 but got 2"
          },
          "totals": {
            "TIMEOUT": 2,
            "FAIL": 1
          }
        }
      }
    },
    "/encrypted-media/drm-mp4-requestmediakeysystemaccess.html": {
      "byUA": {
        "CH55": "OK",
        "ED14": "OK",
        "FF52": "OK"
      },
      "UAmessage": {},
      "totals": {
        "OK": 3
      },
      "subtests": {
        "drm, requestMediaKeySystemAccess: Empty Key System () should result in InvalidAccessError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Unsupported Key System (com.example.unsupported) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Key System ending in \".\" (com.widevine.alpha.) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Capitalized Key System (COM.WIDEVINE.ALPHA) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Non-ASCII Key System (com.widevine.alphaʏ) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Root domain of Key System alone (com) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Root domain of Key System, with dot (com.) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Domain of Key System along (com.widevine) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Domain of Key System, with dot (com.widevine.) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Child of Key System should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Prefixed Key System should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Incomplete Key System name (com.widvine.alpha) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Incomplete Key System name (com.widevine.alph) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Leading space in Key System name ( com.widevine.alpha) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Extra space in Key System name (com.wi devine.alpha) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Trailing space in Key System name (com.widevine.alpha ) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Leading dot in Key System name (.com.widevine.alpha) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Trailing dot in Key System name (com.wi.devine.alpha) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Trailing dot in Key System name (com.widevine.alpha.) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Key System name is case sensitive (COM.WIDEVINE.ALPHA) should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "drm, requestMediaKeySystemAccess: Empty supportedConfigurations should result in InvalidAccessError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Empty configuration": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Basic supported configuration": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Partially supported configuration": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Supported audio codec": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "ContentType formatting must be preserved": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Unsupported audio codec ('audio/webm; codecs=fake') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Unsupported video codec () should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Mismatched audio container/codec ('audio/webm; codecs=mp4a','audio/webm; codecs=mp4a.40.2') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Video codec specified in audio field ('video/mp4;codecs=\"avc1.4d401e\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {
            "ED14": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Audio codec specified in video field ('audio/mp4;codecs=\"mp4a.40.2\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {
            "ED14": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Mismatched audio container/codec ('audio/webm; codecs=avc1','audio/webm; codecs=avc1.42e01e') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Mismatched audio container/codec ('audio/mp4; codecs=vorbis') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Two configurations, one supported": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Two configurations, both supported": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Audio MIME type does not support video codecs (webm) ('audio/webm; codecs=\"vp8,vorbis\"','audio/webm; codecs=\"vorbis, vp8\"','audio/webm; codecs=\"vp8\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Audio MIME type does not support video codecs (mp4) ('audio/mp4; codecs=\"avc1\"','audio/mp4; codecs=\"avc1.4d401e\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Video MIME type does not support audio codecs (webm) ('video/webm; codecs=\"vp8,vorbis\"','video/webm; codecs=\"vorbis, vp8\"','video/webm; codecs=\"vorbis\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Video MIME type does not support audio codecs (mp4) ('video/mp4; codecs=\"mp4a\"','video/mp4; codecs=\"mp4a.40.2\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {
            "ED14": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 1
          }
        },
        "drm, requestMediaKeySystemAccess: WebM audio does not support AVC1/AAC ('audio/webm; codecs=\"aac\"','audio/webm; codecs=\"avc1\"','audio/webm; codecs=\"vp8,aac\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: WebM video does not support AVC1/AAC ('video/webm; codecs=\"aac\"','video/webm; codecs=\"avc1\"','video/webm; codecs=\"vp8,aac\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Leading space in contentType": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Space before ; in contentType": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Trailing space in contentType": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 2
          }
        },
        "Space at start of codecs parameter": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Space at end of codecs parameter": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Video/": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Codecs=": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "Upper case MIME type": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "CODECS=": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Unrecognized foo with webm ('video/webm; foo=\"bar\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "PASS",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code",
            "FF52": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "FAIL": 2,
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Unrecognized foo with mp4 ('video/mp4; foo=\"bar\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code",
            "ED14": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code",
            "FF52": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "FAIL": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Unrecognized foo with codecs ('video/mp4;codecs=\"avc1.4d401e\"; foo=\"bar\"') should result in NotSupportedError": {
          "byUA": {
            "CH55": "FAIL",
            "ED14": "FAIL",
            "FF52": "FAIL"
          },
          "UAmessage": {
            "CH55": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code",
            "ED14": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code",
            "FF52": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "FAIL": 3
          }
        },
        "drm, requestMediaKeySystemAccess: contentType: 'fake' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: contentType: 'audio/fake' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: contentType: 'video/fake' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: contentType: 'video/mp4;codecs=\"AVC1.4D401E\"' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "FAIL",
            "FF52": "PASS"
          },
          "UAmessage": {
            "ED14": "assert_unreached: Unexpected requestMediaKeySystemAccess() success. Reached unreachable code"
          },
          "totals": {
            "PASS": 2,
            "FAIL": 1
          }
        },
        "drm, requestMediaKeySystemAccess: contentType: 'video/mp4;codecs=\",avc1.4d401e\"' should result in NotSupportedError": {
          "byUA": {
            "CH55": "PASS",
            "ED14": "PASS",
            "FF52": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 3
          }
        },
        "drm, requestMediaKeySystemAccess: Key System ending in \".\" (com.microsoft.playready.) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Capitalized Key System (COM.MICROSOFT.PLAYREADY) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Non-ASCII Key System (com.microsoft.playreadyʏ) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Domain of Key System along (com.microsoft) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Domain of Key System, with dot (com.microsoft.) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Incomplete Key System name (com.micosoft.playready) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Incomplete Key System name (com.microsoft.playread) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Leading space in Key System name ( com.microsoft.playready) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Extra space in Key System name (com.mi crosoft.playready) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Trailing space in Key System name (com.microsoft.playready ) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Leading dot in Key System name (.com.microsoft.playready) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Trailing dot in Key System name (com.mi.crosoft.playready) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Trailing dot in Key System name (com.microsoft.playready.) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        },
        "drm, requestMediaKeySystemAccess: Key System name is case sensitive (COM.MICROSOFT.PLAYREADY) should result in NotSupportedError": {
          "byUA": {
            "ED14": "PASS"
          },
          "UAmessage": {},
          "totals": {
            "PASS": 1
          }
        }
      }
    }
  }
}